:root {
    --orange-400: rgb(255, 199, 94);
    --blue-500: #3b82f6;
    --sky-50: #f0f9ff;
    --sky-200: #bae6fd;
    font-family: "roboto", Roboto, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

@font-face {
    font-family: roboto;
    src:
    url(./fonts/roboto_medium/roboto-medium-webfont.woff2) format("woff2"),
    url(./fonts/roboto_medium/roboto-medium-webfont.woff) format("woff");
}

@font-face {
    font-family: roboto_light;
    src:
    url(./fonts/roboto_light/roboto-light-webfont.woff2) format("woff2")
    url(./fonts/roboto_light/roboto-light-webfont.woff) format("woff");
}

body {
    margin: 0%;
}

body > .container {
    max-height: 100vh;
    display: grid;
    grid-template: 1fr 8fr / 1fr 5fr;
    grid-template-areas:
    "sidebar heading"
    "sidebar main";
}

.trending > .header,
.announcements > .header {
    margin-bottom: 1rem;
}

.container > *,
.container > * > * {
    padding: 1rem;
}

.container > .sidebar {
    grid-area: sidebar;
    background-color: var(--orange-400);
}

.container > .heading {
    background-color: var(--sky-50);
    grid-area: heading;
    display: grid;
    grid-template-rows: .5fr 1fr;
    z-index: 2;
    box-shadow: 0rem .3rem rgba(0, 0, 0, 0.226);
}

.projects {
    grid-area: projects;
}

.announcements {
    grid-area: announcements;
}

.trending {
    grid-area: trending;
}

.container > .main {
    grid-area: main;
    background-color: var(--sky-200);
    display: grid;
    grid-template: repeat(5, 1fr) / 3fr 1fr;
    gap: 1rem;
    grid-template-areas:
    "projects announcements"
    "projects announcements"
    "projects announcements"
    "projects trending"
    "projects trending";
}


.nav > .info {
    display: grid;
    align-items: center;
    grid-template-columns: 1fr 2fr;
}

.info > .user {
    display: grid;
    grid-template-columns: 1fr 2fr;
}

.user > .greeting {
    font-size: .8rem;
}

.user > .user.text {
    font-size: 1.5rem;
}

.heading > .nav {
    display: grid;
    grid-template-columns: 5fr 2.4fr;
    gap: 20%;
}

.nav > .search {
    display: grid;
    grid-template-columns: 1fr 9fr;
}

input {
    width: 100%;
    height: 2rem;
    border-style: none;
    background-color: #e2e8f0;
    border-radius: 2rem;
    padding-left: 1rem;
}

.options {
    display: grid;
    grid-template-columns: 3fr 2fr;
    justify-content: space-between;
}

.heading > .options > .user {
    display: grid;
    grid-template: 1fr 2fr / 1fr 3fr;
    grid-template-areas:
        "icon greeting"
        "icon user_text";
}

.profile.icon {
    width: 3rem;
    border-radius: 50%;
}

.options > .user > .icon {
    width: 5rem;
    grid-area: icon;
}

.user > .greeting {
    grid-area: greeting;
}

.options > .user > .user.text {
    grid-area: user_text;
}

.shortcuts {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
}

.sidebar > .header {
    display: grid;
    grid-template-columns: 1fr 2fr;
    align-items: center;
}

.sidebar > * {
    display: grid;
    grid-template-columns: 1fr 4fr;
    gap: 5%;
    align-items: center;
}

.logo {
    width: 60%;
}

.info > .user {
    display: grid;
    grid-template-columns: 1fr 1fr;
}

.header > img.logo {
    transition: .5s cubic-bezier(0.175, 0.885, 0.32, 1.275)
}

.header > img.logo:hover {
    transform: scale(1.5);
    rotate: 90deg;
    transition: .5s cubic-bezier(0.175, 0.885, 0.32, 1.275)
}

label[for="search"] {
    transition: .25s cubic-bezier(0.175, 0.885, 0.32, 1.275)
}

label[for="search"]:hover {
    transform: scale(1.2);
    transition: .25s cubic-bezier(0.175, 0.885, 0.32, 1.275)
}

.shortcuts > * {
    border: solid .6rem var(--orange-400);
    background-color: var(--orange-400);
    border-radius: 5em;
    text-align: center;
}

.shortcuts {
    gap: 5%;
    align-items: center;
}

.projects > .header {
    margin-bottom: 1rem;
}

.container > .project {
    padding: 0%;
    background-color: white;
    border-radius: .5rem;
    display: grid;
    grid-template: 1fr 2fr / .5rem 1fr;
    grid-template-areas:
    "styled_line head"
    "styled_line content"
    "styled_line icons";
}

.project > .iconpack {
    grid-area: icons;
    display: grid;
    padding-left: 25%;
    justify-content: end;
    grid-template-columns: 1fr 1fr 1fr;
}

.project > .iconpack > * {
    justify-self: end;
    max-width: 1.5rem;
}

.container > .project > .header {
    font-weight: bolder;
    grid-area: head;
}
.container > .project > .content {
    padding-top: 0%;
    align-self: self-start;
    font-family: "roboto_light", Roboto;
    grid-area: content;
}
.container > .project > .styled_line {
    padding: 0%;
    grid-area: styled_line;
    background-color: orange;
    border-top-left-radius: inherit;
    border-bottom-left-radius: inherit;
}

.projects > .container {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    grid-template-rows: 1fr;
    grid-auto-rows: 1fr;
}

.trending > .container,
.announcements > .container {
    background-color: white;
    border-radius: .5rem;
    display: grid;
}

.trending > .container {
    padding: 1rem;
}

.logo {
    max-width: 3rem;
}

.notification > .logo {
    max-width: 2rem;
}

.announcement {
    padding: 0%;
    grid-template-rows: 1fr 2fr .52rem;
    grid-template-areas:
    "head"
    "content"
    "styled_line";
}

.announcement > .header {
    grid-area: head;
    font-weight: bold;
    padding-bottom: .25rem;
}
.announcement > .content {
    grid-area: content;
    font-family: "roboto_light";
    font-weight: 900;
    align-self: self-start;
    padding-top: 0%;
}
.announcement > .styled_line {
    grid-area: styled_line;
    height: .1rem;
    padding: 0%;
    background-color: rgb(199, 199, 199);
}

.person {
    padding: 0%;
    display: grid;
    grid-template: 1fr 1fr / 1fr 3fr;
    grid-template-areas:
    "icon head"
    "icon content";
    gap: .5rem;
}


.person > .header {
    grid-area: head;
    align-self: self-end;
}
.person > .icon {
    align-self: center;
    grid-area: icon;
}
.person > .content {
    align-self: flex-start;
    grid-area: content;
}
.trending > .container > .person :is(.icon, .content, .header) {
    padding: 0%;
    margin: 0%;
}